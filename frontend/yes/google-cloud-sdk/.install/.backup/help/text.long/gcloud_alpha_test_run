NAME

      gcloud alpha test run - encapsulation of the 'gcloud test run' command

SYNOPSIS

      gcloud alpha test run [ARGSPEC] [--app APP, -a APP]
      [--app-initial-activity APP_INITIAL_ACTIVITY]
      [--app-package APP_PACKAGE, -A APP_PACKAGE] [--async]
      [--bootstrap-apk BOOTSTRAP_APK] [--bootstrap-package BOOTSTRAP_PACKAGE]
      [--bootstrap-runner-class BOOTSTRAP_RUNNER_CLASS]
      [--device-ids DEVICE_ID,[DEVICE_ID,...], -d DEVICE_ID,[DEVICE_ID,...]]
      [--event-count int] [--event-delay int]
      [--locales LOCALE,[LOCALE,...], -l LOCALE,[LOCALE,...]] [--max-depth int]
      [--max-steps int]
      [--orientations ORIENTATION,[ORIENTATION,...], -o ORIENTATION,[ORIENTATION,...]]
      [--os-version-ids OS_VERSION_ID,[OS_VERSION_ID,...], -v OS_VERSION_ID,[OS_VERSION_ID,...]]
      [--random-seed int] [--results-bucket RESULTS_BUCKET, -b RESULTS_BUCKET]
      [--results-history-name RESULTS_HISTORY_NAME, -H RESULTS_HISTORY_NAME]
      [--test TEST, -t TEST] [--test-package TEST_PACKAGE, -T TEST_PACKAGE]
      [--test-runner-class TEST_RUNNER_CLASS, -r TEST_RUNNER_CLASS]
      [--test-targets TEST_TARGET,[TEST_TARGET,...]] [--timeout TIMEOUT]
      [--type TYPE, -y TYPE] [GLOBAL-FLAG ...]

DESCRIPTION

      (ALPHA) Invoke a test in the Google Cloud Test Lab and monitor results.

POSITIONAL ARGUMENTS

      [ARGSPEC]

         An ARG_FILE:ARG_GROUP_NAME pair, where ARG_FILE is the path to a file
         containing groups of test arguments in yaml format, and ARG_GROUP_NAME
         is the particular yaml object holding a group of arg:value pairs to
         use.

FLAGS

      --app APP, -a APP

         Local or GCS path to the application binary file.

      --app-initial-activity APP_INITIAL_ACTIVITY

         The initial activity that should be used to start the app during a Robo
         test.

      --app-package APP_PACKAGE, -A APP_PACKAGE

         The Java package of the application under test (default: extracted from
         the APK manifest).

      --async

         Invoke a test asynchronously without waiting for test results.

      --bootstrap-apk BOOTSTRAP_APK

         The APK used for bootstrapping a Robo test (e.g., passing the login
         screen).

      --bootstrap-package BOOTSTRAP_PACKAGE

         The java package id for the bootstrap during a Robo test.

      --bootstrap-runner-class BOOTSTRAP_RUNNER_CLASS

         The fully-qualified Java class name of the bootstrap runner.

      --device-ids DEVICE_ID,[DEVICE_ID,...], -d DEVICE_ID,[DEVICE_ID,...]

         The device ID(s) to test against.

      --event-count int

         Number of simulated user events to create during a monkey test
         (default: 1000).

      --event-delay int

         Fixed delay in milliseconds inserted between simulated events (default:
         0).

      --locales LOCALE,[LOCALE,...], -l LOCALE,[LOCALE,...]

         The Android locale(s) to test against.

      --max-depth int

         The maximum depth of the traversal stack a Robo test can explore
         (default: 50).

      --max-steps int

         The maximum number of steps/actions a Robo test can execute (default:
         no limit).

      --orientations ORIENTATION,[ORIENTATION,...], -o
         ORIENTATION,[ORIENTATION,...]

         The device orientation(s) to test against, i.e. "portrait" and/or
         "landscape".

      --os-version-ids OS_VERSION_ID,[OS_VERSION_ID,...], -v
         OS_VERSION_ID,[OS_VERSION_ID,...]

         The Android OS version ID(s) to test against.

      --random-seed int

         Seed value for a monkey test pseudo-random number generator (default:
         0).

      --results-bucket RESULTS_BUCKET, -b RESULTS_BUCKET

         The name of a GCS bucket where test results will be stored (default:
         "cloud-test-<project-id>").

      --results-history-name RESULTS_HISTORY_NAME, -H RESULTS_HISTORY_NAME

         The name of a Tool Results history to publish test results to (default:
         "<app-package name> (gcloud)").

      --test TEST, -t TEST

         Local or GCS path to the test binary file.

      --test-package TEST_PACKAGE, -T TEST_PACKAGE

         The Java package name of the test (default: extracted from the APK
         manifest).

      --test-runner-class TEST_RUNNER_CLASS, -r TEST_RUNNER_CLASS

         The fully-qualified Java class name of the instrumentation test runner
         (default: the last name extracted from the APK manifest).

      --test-targets TEST_TARGET,[TEST_TARGET,...]

         One or more test targets to be run. Each target must be fully qualified
         with the package name or class name, in one of these formats:

           "package package_name"
           "class package_name.class_name"
           "class package_name.class_name#method_name".

      --timeout TIMEOUT

         The max time this test execution can run before it is cancelled.

      --type TYPE, -y TYPE

         The type of test to run (default: instrumentation).

GLOBAL FLAGS

      Run $ gcloud help or $ gcloud --help for a description of the global flags
      available to all commands.

NOTES

      This command is in the Google Cloud SDK gcloud component. See installing
      components if it is not installed.

      This command is currently in ALPHA and may change without notice.

